version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bridge_simulator_db
    environment:
      POSTGRES_DB: bridge_simulator
      POSTGRES_USER: bridge_user
      POSTGRES_PASSWORD: bridge_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bridge_user -d bridge_simulator"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bridge_simulator_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Development Server (optional - for containerized development)
  server:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: bridge_simulator_server
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://bridge_user:bridge_password@postgres:5432/bridge_simulator
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-jwt-secret-change-in-production
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:5173
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run server:dev

volumes:
  postgres_data:
  redis_data: